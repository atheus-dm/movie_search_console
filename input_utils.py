from typing import List, Dict, Optional
import re


def prompt_valid_year(prompt_text: str, year_from: int, year_to: int) -> int:
    while True:
        year = input(prompt_text)
        if year.isdigit():
            year_int = int(year)
            if year_from <= year_int <= year_to:
                return year_int
        print(f"‚ö† –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ–¥ ({year_from}‚Äì{year_to})")


def prompt_next_page() -> str:
    while True:
        response = input("üëâ –ü–æ–∫–∞–∑–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ 10? (y/n): ").strip().lower()
        if response in ("y", "n"):
            return response
        print("‚ö† –í–≤–µ–¥–∏—Ç–µ y –∏–ª–∏ n.")


def select_genres(genres_map: List[Dict]) -> List[str]:
    valid_ids = {g["category_id"] for g in genres_map}

    while True:
        raw_input_genres = input("üé≠ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ –∂–∞–Ω—Ä–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (–∏–ª–∏ 0 –¥–ª—è –≤—Å–µ—Ö): ").strip()
        try:
            ids = [int(i.strip()) for i in raw_input_genres.split(",")]
        except ValueError:
            print("‚ö† –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞. –í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é.")
            continue

        if ids == [0]:
            return [g["name"] for g in genres_map]

        invalid = [i for i in ids if i not in valid_ids]
        if invalid:
            print(f"‚ö† –ñ–∞–Ω—Ä —Å –Ω–æ–º–µ—Ä–æ–º {', '.join(map(str, invalid))} –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å–ø–∏—Å–æ–∫.")
            continue

        return [g["name"] for g in genres_map if g["category_id"] in ids]


def sanitize_input(text: str) -> Optional[str]:
    cleaned = re.sub(r"[^\w\s\-]", "", text)  # –£–¥–∞–ª—è–µ–º —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã –∫—Ä–æ–º–µ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –¥–µ—Ñ–∏—Å–æ–≤
    cleaned = cleaned.strip()
    if not cleaned or cleaned.isspace():
        return None
    return cleaned

from pymongo import MongoClient
from dotenv import load_dotenv
import os
from datetime import datetime, timedelta
import logging
from functools import wraps
from typing import Callable, Any, Optional, List

# üõ† –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Ñ–∞–π–ª
logging.basicConfig(
    filename="log.txt",
    level=logging.INFO,
    format="%(asctime)s [%(levelname)s] %(message)s",
    encoding="utf-8"
)

# üîê –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ .env
load_dotenv()
MONGO_URI = os.getenv("MONGO_URI")
MONGO_DB = os.getenv("MONGO_DB")
MONGO_COLLECTION = os.getenv("MONGO_COLLECTION")

# üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
client = MongoClient(MONGO_URI)
db = client[MONGO_DB]
collection = db[MONGO_COLLECTION]


def log_search(log_type: str) -> Callable:
    """
        –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–∑–æ–≤–æ–≤ –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π: –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ –≤ MongoDB –∏ —Ñ–∞–π–ª `log.txt`.

        üîß –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:
            –û–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç —Ü–µ–ª–µ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–∏—Å–∫), —á—Ç–æ–±—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –ª–æ–≥–∏ –ø—Ä–∏ –µ—ë –≤—ã–∑–æ–≤–µ ‚Äî –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–∞–º–æ–π –ª–æ–≥–∏–∫–∏ —Ñ—É–Ω–∫—Ü–∏–∏.

        üì• –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
            log_type (str): –¢–∏–ø –ª–æ–≥–∏—Ä—É–µ–º–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ ‚Äî –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞.
                –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è:
                    - "keyword": –æ–∂–∏–¥–∞–µ—Ç—Å—è, —á—Ç–æ –ø–µ—Ä–≤–∞—è –ø–æ–∑–∏—Ü–∏—è (args[0]) —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–∏—Å–∫–æ–≤–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ ‚Äî str;
                    - "genre_year": –æ–∂–∏–¥–∞–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫ –∂–∞–Ω—Ä–æ–≤ (args[0]) –∏ –¥–∏–∞–ø–∞–∑–æ–Ω –ª–µ—Ç ‚Äî int –æ—Ç/–¥–æ (args[1], args[2]);
                    - "genre_exact_year": –æ–∂–∏–¥–∞–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫ –∂–∞–Ω—Ä–æ–≤ (args[0]) –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≥–æ–¥ ‚Äî int (args[1]).

        üõ† –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:
            log_search() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç-–¥–µ–∫–æ—Ä–∞—Ç–æ—Ä ‚Äî `decorator`.

            –§—É–Ω–∫—Ü–∏—è decorator() –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ü–µ–ª–µ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é `func`, –∫–æ—Ç–æ—Ä—É—é —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–±–µ—Ä–Ω—É—Ç—å.

            –û–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é-–æ–±—ë—Ä—Ç–∫—É ‚Äî `wrapper`, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º –≤—ã–∑–æ–≤–µ:
                1. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ `logged=True` –≤ kwargs ‚Äî –µ—Å–ª–∏ —Ç–∞–∫–æ–π —Ñ–ª–∞–≥ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è. –≠—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥.
                2. –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è UTC (`now`), –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–µ –¥–ª—è –º–µ—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ "—Å–≤–µ–∂–µ—Å—Ç–∏" –∑–∞–ø—Ä–æ—Å–∞.
                3. –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç log_type:
                    - –ò–∑–≤–ª–µ–∫–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ args: –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ, –∂–∞–Ω—Ä—ã, –≥–æ–¥—ã.
                    - –û—á–∏—â–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (`strip()`), —É–¥–∞–ª—è–µ—Ç –ø—É—Å—Ç—ã–µ/–Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ –∑–∞–ø–∏—Å–∏.
                    - –ü—Ä–∏–≤–æ–¥–∏—Ç –≥–æ–¥—ã –∫ —á–∏—Å–ª–∞–º –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç –≤—Å—ë, —á—Ç–æ –º–ª–∞–¥—à–µ 1900.
                4. –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ –≤ MongoDB –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º –∏ `timestamp >= now - 5 —Å–µ–∫—É–Ω–¥`:
                    ‚Üí –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–æ–≤ –ø—Ä–∏ –±—ã—Å—Ç—Ä–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏.
                5. –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞:
                    - –§–æ—Ä–º–∏—Ä—É–µ—Ç –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–æ–∫—É–º–µ–Ω—Ç–∞ (—Ç–∏–ø + –ø–∞—Ä–∞–º–µ—Ç—Ä—ã + –º–µ—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏);
                    - –í—Å—Ç–∞–≤–ª—è–µ—Ç –≤ MongoDB —á–µ—Ä–µ–∑ `insert_one`;
                    - –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ `log.txt` —á–µ—Ä–µ–∑ `logging.info(...)`.

                6. –ü–æ—Å–ª–µ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è, –≤—ã–∑—ã–≤–∞–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é `func` —Å —Ç–µ–º–∏ –∂–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏:
                    ‚Üí `return func(*args, **kwargs)` –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±–µ—Å–ø—Ä–µ–ø—è—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–∑–æ–≤ —Å –≤–æ–∑–≤—Ä–∞—Ç–æ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞, –∫–∞–∫ –±—É–¥—Ç–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –±—ã–ª–æ.

            –ù–∞–∫–æ–Ω–µ—Ü:
            - `return wrapper` ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ë—Ä—Ç–∫—É `wrapper`, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–º–µ–Ω—è–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é.
            - `return decorator` ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–µ—Å—å –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä, —á—Ç–æ–±—ã –æ–Ω –º–æ–≥ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –∫–∞–∫ `@log_search("...")`.

        üß™ –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:

            @log_search("keyword")
            def search_by_keyword(keyword: str):
                ...

            @log_search("genre_year")
            def search_by_genres(genres: List[str], from_year: int, to_year: int):
                ...

            @log_search("genre_exact_year")
            def search_by_exact_year(genres: List[str], year: int):
                ...

        üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–ø–∏—Å–µ–π –≤ MongoDB:
            –î–ª—è "keyword":
                {
                    "type": "keyword",
                    "keyword": "thriller",
                    "timestamp": <datetime>
                }

            –î–ª—è "genre_year":
                {
                    "type": "genre_year",
                    "genres": ["comedy", "drama"],
                    "years": "1990‚Äì2000",
                    "timestamp": <datetime>
                }

            –î–ª—è "genre_exact_year":
                {
                    "type": "genre_exact_year",
                    "genres": ["horror"],
                    "year": 1995,
                    "timestamp": <datetime>
                }

        üìå –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–º–µ—á–∞–Ω–∏—è:
            - –í—Å–µ –∂–∞–Ω—Ä—ã —Å–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è (`sorted()`) ‚Äî —ç—Ç–æ –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç –ø–æ—Ä—è–¥–æ–∫ –∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –¥—É–±–ª–∏.
            - –°—Ç—Ä–æ–∫–∏ –ø—Ä–∏–≤–æ–¥—è—Ç—Å—è –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É ‚Äî –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏.
            - –í—ã–∑—ã–≤–∞–µ–º–∞—è —Ñ—É–Ω–∫—Ü–∏—è (`func`) –æ—Å—Ç–∞—ë—Ç—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω—Ç–∞–∫—Ç–Ω–æ–π: –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç –µ—ë –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
            - –í—Å—è –ª–æ–≥–∏–∫–∞ –∑–∞–ø–∏—Å–∏ –æ—Ç–¥–µ–ª–µ–Ω–∞ ‚Äî –æ–±–ª–µ–≥—á–∞–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.
        """
    def decorator(func: Callable) -> Callable:
        @wraps(func)
        def wrapper(*args, **kwargs) -> Any:
            if kwargs.get("logged", False):
                return func(*args, **kwargs)

            now = datetime.utcnow()

            if log_type == "keyword":
                keyword = args[0].lower().strip()
                if not keyword:
                    return func(*args, **kwargs)

                recent = collection.find_one({
                    "type": "keyword",
                    "keyword": keyword,
                    "timestamp": {"$gte": now - timedelta(seconds=5)}
                })
                if not recent:
                    collection.insert_one({
                        "type": "keyword",
                        "keyword": keyword,
                        "timestamp": now
                    })
                    logging.info(f"–õ–æ–≥ —Å–æ—Ö—Ä–∞–Ω—ë–Ω: keyword ‚Üí '{keyword}'")

            elif log_type == "genre_year":
                genres: List[str] = args[0]
                year_from = args[1]
                year_to = args[2]

                genres_clean = [g.strip() for g in genres if g and g.strip()]
                if not genres_clean:
                    return func(*args, **kwargs)

                year_range = f"{year_from}‚Äì{year_to}"

                recent = collection.find_one({
                    "type": "genre_year",
                    "genres": sorted(genres_clean),
                    "years": year_range,
                    "timestamp": {"$gte": now - timedelta(seconds=5)}
                })
                if not recent:
                    collection.insert_one({
                        "type": "genre_year",
                        "genres": sorted(genres_clean),
                        "years": year_range,
                        "timestamp": now
                    })
                    logging.info(f"–õ–æ–≥ —Å–æ—Ö—Ä–∞–Ω—ë–Ω: genres ‚Üí {genres_clean} | years ‚Üí {year_range}")

            elif log_type == "genre_exact_year":
                genres: List[str] = args[0]
                raw_year = args[1]

                genres_clean = [g.strip() for g in genres if g and g.strip()]
                try:
                    year = int(raw_year)
                except (ValueError, TypeError):
                    year = None

                if not genres_clean or year is None or year < 1990:
                    return func(*args, **kwargs)

                recent = collection.find_one({
                    "type": "genre_exact_year",
                    "genres": sorted(genres_clean),
                    "year": year,
                    "timestamp": {"$gte": now - timedelta(seconds=5)}
                })
                if not recent:
                    collection.insert_one({
                        "type": "genre_exact_year",
                        "genres": sorted(genres_clean),
                        "year": year,
                        "timestamp": now
                    })
                    logging.info(f"–õ–æ–≥ —Å–æ—Ö—Ä–∞–Ω—ë–Ω: genres ‚Üí {genres_clean} | year ‚Üí {year}")

            return func(*args, **kwargs)
        return wrapper
    return decorator


def log_keyword_search(keyword: str) -> None:
    """
        –õ–æ–≥–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ø–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É –≤ MongoDB –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏–µ –≤ —Ñ–∞–π–ª `log.txt`.

         –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:
            –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É ‚Äî
            –Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ (–≤–Ω–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞) –∏–ª–∏ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é —è–≤–Ω–æ.

         –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
            keyword (str): –°—Ç—Ä–æ–∫–∞ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä–æ–µ –≤–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å. –ú–æ–∂–µ—Ç –±—ã—Ç—å –∂–∞–Ω—Ä–æ–º, –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∏–ª–∏ —Ç–µ–º–∞—Ç–∏–∫–æ–π.

         –ü—Ä–æ—Ü–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:
            1. –û—á–∏—Å—Ç–∫–∞ –≤—Ö–æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏:
                - –ü—Ä–∏–≤–æ–¥–∏—Ç—Å—è –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É (`lower()`), —á—Ç–æ–±—ã –ª–æ–≥ –±—ã–ª —Ä–µ–≥–∏—Å—Ç—Ä–æ–Ω–µ–∑–∞–≤–∏—Å–∏–º.
                - –£–¥–∞–ª—è—é—Ç—Å—è –ø—Ä–æ–±–µ–ª—ã –ø–æ –∫—Ä–∞—è–º (`strip()`), —á—Ç–æ–±—ã –∏—Å–∫–ª—é—á–∏—Ç—å –ø—É—Å—Ç—ã–µ –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã.

            2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ—Ç—É:
                - –ï—Å–ª–∏ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏ —Å—Ç—Ä–æ–∫–∞ –ø—É—Å—Ç–∞ ‚Äî –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É —á–µ—Ä–µ–∑ `return`.

            3. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏:
                - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `datetime.utcnow()` ‚Äî —ç—Ç–æ –º–µ—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –∑–∞–ø–∏—Å–∞–Ω–∞ –≤ –ª–æ–≥.

            4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –ª–æ–≥ (–∞–Ω—Ç–∏-–¥—É–±–ª–∏–∫–∞—Ç):
                - –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–∏—Å–∫ –≤ MongoDB: `collection.find_one(...)`
                - –£—Å–ª–æ–≤–∏–µ:
                    - `type` –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å `"keyword"`;
                    - `keyword` –¥–æ–ª–∂–Ω–æ —Ç–æ—á–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –æ—á–∏—â–µ–Ω–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º;
                    - `timestamp` –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ —Å—Ç–∞—Ä—à–µ 5 —Å–µ–∫—É–Ω–¥ (`timestamp >= now - timedelta(seconds=5)`).

            5. –ï—Å–ª–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ–π –∑–∞–ø–∏—Å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ:
                - –§–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –∏ –≤—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –Ω–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –≤ MongoDB:
                    {
                        "type": "keyword",
                        "keyword": <–æ—á–∏—â–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ>,
                        "timestamp": <—Ç–µ–∫—É—â–µ–µ UTC –≤—Ä–µ–º—è>
                    }

                - –î–æ–±–∞–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ –≤ –ª–æ–≥-—Ñ–∞–π–ª `log.txt`:
                    –ü—Ä–∏–º–µ—Ä: `–õ–æ–≥ —Å–æ—Ö—Ä–∞–Ω—ë–Ω: keyword ‚Üí 'thriller'`

         –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
            - –§—É–Ω–∫—Ü–∏—è –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ (`None`) ‚Äî –æ–Ω–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –ø–æ–±–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è: —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö.
            - –ú–µ—Ö–∞–Ω–∏–∑–º –∑–∞—â–∏—Ç—ã –æ—Ç –¥—É–±–ª–∏—Ä—É—é—â–µ–π –∑–∞–ø–∏—Å–∏ –∏–¥–µ–Ω—Ç–∏—á–µ–Ω —Ç–æ–º—É, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ `log_search`.
            - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é, –±–µ–∑ –æ–±–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π ‚Äî —É–¥–æ–±–Ω–æ –¥–ª—è —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –≤–Ω–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ pipeline (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ –∞–¥–º–∏–Ω–∫–µ, –±–æ—Ç–µ, CLI).
            - –õ–æ–≥-—Ñ–∞–π–ª —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ `logging.info(...)`, —Ñ–æ—Ä–º–∞—Ç –∑–∞–¥–∞–Ω –≤ `basicConfig()`.

         –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑–µ:
            {
                "type": "keyword",
                "keyword": "comedy",
                "timestamp": datetime.utcnow()
            }

         –ü—Ä–∏–º–µ—Ä:
            log_keyword_search("sci-fi")
            ‚Üí —Å–æ–∑–¥–∞—ë—Ç –∑–∞–ø–∏—Å—å –≤ MongoDB –∏ —Å—Ç—Ä–æ–∫—É –≤ log.txt, –µ—Å–ª–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–∞—è –Ω–µ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ –Ω–µ–¥–∞–≤–Ω–æ.
        """
    keyword = keyword.lower().strip()
    if not keyword:
        return

    now = datetime.utcnow()
    recent = collection.find_one({
        "type": "keyword",
        "keyword": keyword,
        "timestamp": {"$gte": now - timedelta(seconds=5)}
    })
    if not recent:
        collection.insert_one({
            "type": "keyword",
            "keyword": keyword,
            "timestamp": now
        })
        logging.info(f"–õ–æ–≥ —Å–æ—Ö—Ä–∞–Ω—ë–Ω: keyword ‚Üí '{keyword}'")


def log_genre_year_search(genres: List[str], year_from: int, year_to: int) -> None:
    """
        –õ–æ–≥–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å –ø–æ–∏—Å–∫–∞ –ø–æ –∂–∞–Ω—Ä–∞–º –∏ –¥–∏–∞–ø–∞–∑–æ–Ω—É –ª–µ—Ç –≤ MongoDB –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞–ø–∏—Å—å –≤ –ª–æ–≥-—Ñ–∞–π–ª.

        –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:
            –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∏—Å–∫–æ–≤–æ–º –∑–∞–ø—Ä–æ—Å–µ, —Å–æ—Å—Ç–æ—è—â–µ–º –∏–∑ –æ–¥–Ω–æ–≥–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∂–∞–Ω—Ä–æ–≤
            –∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞, –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏, —á—Ç–æ —Ç–∞–∫–æ–π –∑–∞–ø—Ä–æ—Å –µ—â—ë –Ω–µ –±—ã–ª –∑–∞–ø–∏—Å–∞–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø—è—Ç–∏ —Å–µ–∫—É–Ω–¥.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
            genres (List[str]): –°–ø–∏—Å–æ–∫ –∂–∞–Ω—Ä–æ–≤, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ø–æ–∏—Å–∫.
                                –ú–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—É—Å—Ç—ã–µ –∏–ª–∏ –ø—Ä–æ–±–µ–ª—å–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –∏—Å–∫–ª—é—á–µ–Ω—ã.
            year_from (int): –ù–∞—á–∞–ª—å–Ω—ã–π –≥–æ–¥ –¥–∏–∞–ø–∞–∑–æ–Ω–∞, –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ.
            year_to (int): –ö–æ–Ω–µ—á–Ω—ã–π –≥–æ–¥ –¥–∏–∞–ø–∞–∑–æ–Ω–∞, –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ.

        –ü—Ä–æ—Ü–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:
            1. –û—á–∏—Å—Ç–∫–∞ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:
                - –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ genres –ø—Ä–æ—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ .strip().
                - –ò–∑ —Å–ø–∏—Å–∫–∞ —É–¥–∞–ª—è—é—Ç—Å—è –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏—è, —Å–æ—Å—Ç–æ—è—â–∏–µ —Ç–æ–ª—å–∫–æ –∏–∑ –ø—Ä–æ–±–µ–ª–æ–≤.
                - –ï—Å–ª–∏ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏ —Å–ø–∏—Å–æ–∫ –∂–∞–Ω—Ä–æ–≤ –æ–∫–∞–∑–∞–ª—Å—è –ø—É—Å—Ç—ã–º ‚Äî –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è.

            2. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –≥–æ–¥–æ–≤:
                - –ì–æ–¥—ã –æ–±—ä–µ–¥–∏–Ω—è—é—Ç—Å—è –≤ —Å—Ç—Ä–æ–∫—É —Ñ–æ—Ä–º–∞—Ç–∞ "YYYY‚ÄìYYYY", –≥–¥–µ YYYY ‚Äî –∑–Ω–∞—á–µ–Ω–∏—è year_from –∏ year_to.

            3. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏:
                - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è datetime.utcnow() –∫–∞–∫ –º–µ—Ç–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.

            4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–∞:
                - –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∑–∞–ø—Ä–æ—Å –∫ MongoDB —Å —É—Å–ª–æ–≤–∏—è–º–∏:
                    - type == "genre_year"
                    - genres == –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π genres_clean
                    - years == —Å—Ç—Ä–æ–∫–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞
                    - timestamp >= (—Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è - 5 —Å–µ–∫—É–Ω–¥)
                - –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å –Ω–∞–π–¥–µ–Ω–∞ ‚Äî –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è.

            5. –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞:
                - –°–æ–∑–¥–∞—ë—Ç—Å—è –Ω–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç:
                    {
                        "type": "genre_year",
                        "genres": sorted(genres_clean),
                        "years": "<year_from>‚Äì<year_to>",
                        "timestamp": <—Ç–µ–∫—É—â–µ–µ UTC-–≤—Ä–µ–º—è>
                    }
                - –î–æ–∫—É–º–µ–Ω—Ç —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é MongoDB.
                - –í –ª–æ–≥-—Ñ–∞–π–ª `log.txt` –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —á–µ—Ä–µ–∑ logging.info():
                    –õ–æ–≥ —Å–æ—Ö—Ä–∞–Ω—ë–Ω: genres ‚Üí <–æ—á–∏—â–µ–Ω–Ω—ã–µ –∂–∞–Ω—Ä—ã> | years ‚Üí <–¥–∏–∞–ø–∞–∑–æ–Ω>

        –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:
            None. –§—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –ø–æ–±–æ—á–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã ‚Äî –∑–∞–ø–∏—Å—å –≤ MongoDB –∏ –ª–æ–≥-—Ñ–∞–π–ª.

        –û—Ç–ª–∏—á–∏—è –æ—Ç –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞:
            - –ù–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–∏–≥–Ω–∞—Ç—É—Ä—ã –¥—Ä—É–≥–æ–π —Ñ—É–Ω–∫—Ü–∏–∏;
            - –ú–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Ä—É—á–Ω—É—é –≤ –ª—é–±–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ, –≥–¥–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —è–≤–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –ª–æ–≥;
            - –ù–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ñ–ª–∞–≥ `logged` ‚Äî –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ–≥–¥–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, –µ—Å–ª–∏ –Ω–µ—Ç –¥—É–±–ª–∏–∫–∞—Ç–∞;
            - –ê—Ä–≥—É–º–µ–Ω—Ç—ã –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ, —á—Ç–æ —É–ø—Ä–æ—â–∞–µ—Ç –≤—ã–∑–æ–≤ –∏ –ø–æ–≤—ã—à–∞–µ—Ç —á–∏—Ç–∞–µ–º–æ—Å—Ç—å.
        """
    genres_clean = [g.strip() for g in genres if g and g.strip()]
    if not genres_clean:
        return

    year_range = f"{year_from}‚Äì{year_to}"
    now = datetime.utcnow()
    recent = collection.find_one({
        "type": "genre_year",
        "genres": sorted(genres_clean),
        "years": year_range,
        "timestamp": {"$gte": now - timedelta(seconds=5)}
    })
    if not recent:
        collection.insert_one({
            "type": "genre_year",
            "genres": sorted(genres_clean),
            "years": year_range,
            "timestamp": now
        })
        logging.info(f"–õ–æ–≥ —Å–æ—Ö—Ä–∞–Ω—ë–Ω: genres ‚Üí {genres_clean} | years ‚Üí {year_range}")


def log_genre_exact_year_search(genres: List[str], year: int) -> None:
    """
    –õ–æ–≥–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫ –ø–æ –∂–∞–Ω—Ä–∞–º –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –≥–æ–¥—É –≤ MongoDB –∏ –ª–æ–≥-—Ñ–∞–π–ª.

    –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:
        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø–æ –∂–∞–Ω—Ä–∞–º –∏ –æ–¥–Ω–æ–º—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –≥–æ–¥—É.
        –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ª–æ–≥-–∑–∞–ø–∏—Å—å —Ç–æ–ª—å–∫–æ –≤ —Ç–æ–º —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ —Ç–∞–∫–æ–π –∑–∞–ø—Ä–æ—Å –Ω–µ –±—ã–ª –≤—ã–ø–æ–ª–Ω–µ–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø—è—Ç–∏ —Å–µ–∫—É–Ω–¥.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        genres (List[str]): –°–ø–∏—Å–æ–∫ –∂–∞–Ω—Ä–æ–≤, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è. –î–æ–ø—É—Å–∫–∞—é—Ç—Å—è –ø—É—Å—Ç—ã–µ –∏ –ø—Ä–æ–±–µ–ª—å–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –∏—Å–∫–ª—é—á–µ–Ω—ã.
        year (int): –ì–æ–¥, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è. –ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º –Ω–µ –º–µ–Ω—å—à–µ 1900.

    –ü—Ä–æ—Ü–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:
        1. –û—á–∏—Å—Ç–∫–∞ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:
            - –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ genres –ø—Ä–æ—Ö–æ–¥—è—Ç —á–µ—Ä–µ–∑ .strip().
            - –ü—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ —ç–ª–µ–º–µ–Ω—Ç—ã, —Å–æ—Å—Ç–æ—è—â–∏–µ —Ç–æ–ª—å–∫–æ –∏–∑ –ø—Ä–æ–±–µ–ª–æ–≤, —É–¥–∞–ª—è—é—Ç—Å—è.
            - –ï—Å–ª–∏ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏ —Å–ø–∏—Å–æ–∫ –∂–∞–Ω—Ä–æ–≤ –æ–∫–∞–∑–∞–ª—Å—è –ø—É—Å—Ç—ã–º ‚Äî –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è.

        2. –í–∞–ª–∏–¥–∞—Ü–∏—è –≥–æ–¥–∞:
            - –ì–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º (int) –∏ –Ω–µ –º–µ–Ω—å—à–µ 1900.
            - –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, None, –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ, –º–µ–Ω–µ–µ 1900) ‚Äî –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è.

        3. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –º–µ—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–∏:
            - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è datetime.utcnow() –¥–ª—è —Ñ–∏–∫—Å–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–ø—Ä–æ—Å–∞.

        4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–∞:
            - –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∑–∞–ø—Ä–æ—Å –∫ MongoDB, –∫–æ—Ç–æ—Ä—ã–π –∏—â–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç —Å –ø–æ–ª—è–º–∏:
                - type == "genre_exact_year";
                - genres == –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π genres_clean;
                - year == –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–æ–¥–∞;
                - timestamp >= (—Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è - 5 —Å–µ–∫—É–Ω–¥).
            - –ï—Å–ª–∏ —Å–æ–≤–ø–∞–¥–∞—é—â–∞—è –∑–∞–ø–∏—Å—å –Ω–∞–π–¥–µ–Ω–∞ ‚Äî –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è.

        5. –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞:
            - –§–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –Ω–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç:
                {
                    "type": "genre_exact_year",
                    "genres": sorted(genres_clean),
                    "year": year,
                    "timestamp": datetime.utcnow()
                }
            - –î–æ–∫—É–º–µ–Ω—Ç —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ MongoDB —á–µ—Ä–µ–∑ insert_one().
            - –í –ª–æ–≥-—Ñ–∞–π–ª `log.txt` –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —á–µ—Ä–µ–∑ logging.info():
                –õ–æ–≥ —Å–æ—Ö—Ä–∞–Ω—ë–Ω: genres ‚Üí <–∂–∞–Ω—Ä—ã> | year ‚Üí <–≥–æ–¥>

    –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:
        None. –§—É–Ω–∫—Ü–∏—è —Ä–µ–∞–ª–∏–∑—É–µ—Ç –ø–æ–±–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –∏ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç.

    –û—Ç–ª–∏—á–∏—è –æ—Ç –¥—Ä—É–≥–∏—Ö –ª–æ–≥–∏—Ä—É—é—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π:
        - –í –ª–æ–≥ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –æ–¥–∏–Ω–æ—á–Ω—ã–π –≥–æ–¥, –∞ –Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω (–≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç log_genre_year_search).
        - –¢—Ä–µ–±—É–µ—Ç—Å—è —Å—Ç—Ä–æ–≥–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –≥–æ–¥–∞.
        - –ü–æ–ª—è `years` –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è, —Ç–æ–ª—å–∫–æ `year`.
        - –ú–µ—Ö–∞–Ω–∏–∑–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∂–∞–Ω—Ä–æ–≤ –∏ –∑–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–æ–≤ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã –æ—Å—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä—É—é—â–∏–º —Ñ—É–Ω–∫—Ü–∏—è–º.

    –ü—Ä–∏–º–µ—Ä –≤—ã–∑–æ–≤–∞:
        log_genre_exact_year_search(['sci-fi', 'thriller'], 1999)
        ‚Üí —Å–æ–∑–¥–∞—Å—Ç –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –∏ –≤ –ª–æ–≥-—Ñ–∞–π–ª–µ, –µ—Å–ª–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–∞—è –Ω–µ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 5 —Å–µ–∫—É–Ω–¥.
    """
    genres_clean = [g.strip() for g in genres if g and g.strip()]
    if not genres_clean or year is None or year < 1990:
        return

    now = datetime.utcnow()
    recent = collection.find_one({
        "type": "genre_exact_year",
        "genres": sorted(genres_clean),
        "year": year,
        "timestamp": {"$gte": now - timedelta(seconds=5)}
    })
    if not recent:
        collection.insert_one({
            "type": "genre_exact_year",
            "genres": sorted(genres_clean),
            "year": year,
            "timestamp": now
        })
        logging.info(f"–õ–æ–≥ —Å–æ—Ö—Ä–∞–Ω—ë–Ω: genres ‚Üí {genres_clean} | year ‚Üí {year}")
